/* leetcode problem -> 2831 

Find the Longest Equal Subarray

*/
class Solution 
{
public:
    int fun(vector<int> nums, int k) 
    {
        sort(nums.begin(),nums.end());
        int ans=0;
        int i = 0, j = 0;
        while(j<nums.size())
        {            
            while((nums[j] - nums[i]) - (j - i) > k)
            {
                i++;
            }
            if((nums[j] - nums[i]) - (j - i) <= k)
            {
                ans = max(ans, j-i+1);
            }
            j++;
        }
        return ans;
    }
    int longestEqualSubarray(vector<int>& nums, int k) 
    {
        unordered_map<int,vector<int>>mp;
        for(int i=0;i<nums.size();i++)
        {
            mp[nums[i]].push_back(i);
        }
        int ans=0;
        for(auto it:mp)
        {
            vector<int>a=it.second;
            ans=max(ans,fun(a,k));
        }
        return ans;      
    }
};